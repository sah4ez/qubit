
syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.github/sah4ez";
option java_outer_classname = "qsim";

package pb_qubit;

message Q {
	Qubit qubit = 1;
}

service Qsim {
	rpc H(QsimRequest) returns (QsimResponse){}
	rpc X(QsimRequest) returns (QsimResponse){}
	rpc Y(QsimRequest) returns (QsimResponse){}
	rpc Z(QsimRequest) returns (QsimResponse){}
	rpc S(QsimRequest) returns (QsimResponse){}
	rpc T(QsimRequest) returns (QsimResponse){}
	rpc Apply(ApplyRequest) returns (QsimResponse){}
	rpc ControlledR(ControlledRequest) returns (QsimResponse){}
	rpc ControlledZ(ControlledRequest) returns (QsimResponse){}
	rpc ControlledNOT(ControlledRequest) returns (QsimResponse){}
	rpc QFT(Empty) returns (QsimResponse){}
	rpc InverseQFT(Empty) returns (QsimResponse){}
}

service QQubit {
	rpc NumberOfBit(Empty) returns (NumberOfBitResponse){}
	rpc IsZero(EpsRequest) returns (BoolResponse){}
	rpc IsOne(EpsRequest) returns (BoolResponse){}
	rpc InnerProduct(QRequest) returns (Complex128Response) {}
	rpc OuterProduct(QRequest) returns (MatrixResponse) {}
	rpc Fidelity(QRequest) returns (DoubleResponse) {}
	rpc TraceDistance(QRequest) returns (DoubleResponse) {}
	rpc Equals(EqualsRequest) returns (BoolResponse) {}
	rpc TensorProduct(QRequest) returns (QResponse) {}
	rpc Apply(MatrixRequest) returns (QResponse) {}
	rpc Normalize(Empty) returns (QResponse) {}
	rpc Amplitude(Empty) returns (AmplitudeResponse) {}
	rpc Probability(Empty) returns (ProbabilityResponse) {} 
	rpc Measure(MeasureRequest)returns (QResponse) {}
	rpc ProbabilityZeroAt(BitRequest) returns (ProbabilityAtResponse) {}
	rpc ProbabilityOneAt(BitRequest) returns (ProbabilityAtResponse) {}
	rpc MeasureAt(BitRequest) returns (QResponse) {}
}

message QsimRequest {
	repeated Q q = 1;
}

message ApplyRequest {
	Matrix m = 1;
	repeated Q q = 2;
}

message ControlledRequest {
	repeated Q control = 1;
	Q target = 2;
	int64 k = 3;
}

message QsimResponse{
	Q q = 1;
}

message Qubit {
	Vector vector = 1;
}


// None is empty request
message Empty {}

message NumberOfBitResponse {
	int32 bit = 1;
}

message EpsRequest {
	repeated double eps = 1;
}

message BoolResponse {
	bool ok = 1;
}

message DoubleResponse {
	double data = 1;
}

message QRequest {
	Qubit qubit = 1;
}
message QResponse {
	Qubit qubit = 1;
}

message Complex128Response {
	Complex128 complex = 1;
}

message MatrixRequest {
	Matrix matrix = 1;
}

message MatrixResponse {
	Matrix matrix = 1;
}

message EqualsRequest {
	Qubit qubit = 1;
	repeated double eps = 2;
}

message  AmplitudeResponse{
	repeated Complex128 complex = 1;
}

message  ProbabilityResponse{
	repeated double data = 1;
}

message MeasureRequest {
	repeated int32 bit = 1;
}

message BitRequest {
	int32 bit = 1;
}

message ProbabilityAtResponse {
	repeated int32 i = 1;
	repeated double d = 2;
}

message Complex128 {
	double absolute = 1;
	double theta = 2;
}

message Vector {
	repeated Complex128 vector = 1;
}

message Matrix {
	repeated Vector vectors = 1;
}
