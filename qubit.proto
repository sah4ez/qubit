
syntax = "proto3";

import "math.proto";

option java_multiple_files = true;
option java_package = "com.github/sah4ez";
option java_outer_classname = "qubit";

package qubit;

message Qubit {
	math.Vector vector = 1;
}

service Qubit {
	rpc NumberOfBit(Empty) returns int
	rpc IsZero(eps ...float64) bool
	rpc IsOne(eps ...float64) bool
	rpc InnerProduct(q0 *Qubit) complex128
	rpc OuterProduct(q0 *Qubit) matrix.Matrix
	rpc Fidelity(q0 *Qubit) float64
	rpc TraceDistance(q0 *Qubit) float64
	rpc Equals(q0 *Qubit, eps ...float64) bool
	rpc TensorProduct(q0 *Qubit) *Qubit
	rpc Apply(m matrix.Matrix) *Qubit
	rpc Normalize(Empty) *Qubit
	rpc Amplitude(Empty) []complex128
	rpc Probability(Empty) []float64
	rpc Measure(bit ...int) *Qubit
	rpc ProbabilityZeroAt(bit int) ([]int, []float64)
	rpc ProbabilityOneAt(bit int) ([]int, []float64)
	rpc MeasureAt(bit int) *Qubit
}

// None is empty request
message Empty {}

